@startuml
title Assign technicians
actor Manager
boundary "view:\nAssignTechnicianView" as view
entity "technicianDAO:\nTechnicianDAO" as tDAO
entity "serviceRequestDAO:\nServiceRequestDAO" as srDAO
control MainController

Manager -> MainController : assignTechnician()
create control AssignTechnicianController as controller
MainController -> controller : <<create>>(view, technicianDAO, serviceRequestDAO)
controller --> MainController
MainController -> controller : run()
controller -> srDAO : getPending()
srDAO --> controller : pendingServiceRequests
alt pendingServiceRequests.length == 0
    controller -> view : displayNoPendingServiceRequest()
    view --> controller
else pendingServiceRequests.length > 0
    controller -> view : displayServiceRequests(pendingServiceRequests)
    view --> controller : serviceRequestId
    controller -> srDAO : getById(serviceRequestId)
    srDAO --> controller : chosenServiceRequest
    controller -> view : getDateOfService()
    view --> controller : dateOfService
    controller -> tDAO : getAvailable(dateOfService)
    tDAO --> controller : availableTechnicians
    alt availableTechnicians.length == 0
        controller -> view : displayNoAvailableTechnicians()
        view --> controller
    else availableTechnicians.length > 0
        controller -> view : displayTechnicians(availableTechnicians)
        view --> controller : technicianId
        controller -> tDAO : getById(technicianId)
        tDAO --> controller : chosenTechnician
        controller -> chosenServiceRequest : setTechnician(chosenTechnician, dateOfService)
        chosenServiceRequest -> chosenTechnician : addServiceRequest(this)
        chosenTechnician -> chosenServiceRequest
        chosenServiceRequest --> controller 
    end
end
controller --> MainController 
MainController --> Manager
@enduml


